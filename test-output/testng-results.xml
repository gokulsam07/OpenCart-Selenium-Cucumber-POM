<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="7" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-08T11:50:52 IST" name="Default suite" finished-at="2023-04-08T11:51:57 IST" duration-ms="65398">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.MyRunner@7674f035]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-04-08T11:50:52 IST" name="Default test" finished-at="2023-04-08T11:51:57 IST" duration-ms="65398">
      <class name="runner.MyRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.MyRunner@7674f035]" started-at="2023-04-08T11:50:52 IST" name="setUpClass" finished-at="2023-04-08T11:50:53 IST" duration-ms="1517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@410382cb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.MyRunner@7674f035]" started-at="2023-04-08T11:50:53 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-08T11:51:01 IST" duration-ms="7328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with existent product"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Global search feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.MyRunner@7674f035]" started-at="2023-04-08T11:51:01 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-08T11:51:05 IST" duration-ms="4437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with nonexistent product"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Global search feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.MyRunner@7674f035]" started-at="2023-04-08T11:51:05 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-08T11:51:10 IST" duration-ms="4500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with no product"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Global search feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.MyRunner@7674f035]" started-at="2023-04-08T11:51:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-08T11:51:15 IST" duration-ms="5227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.MyRunner@7674f035]" started-at="2023-04-08T11:51:15 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-08T11:51:20 IST" duration-ms="5394" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with invalid username and valid pasword"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login feature"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.fail(Assert.java:115)
at stepdefinitions.LoginTest.user_should_get_a_proper_warning_message(LoginTest.java:59)
at ✽.user should get a proper warning message(file:///C:/OpenCart-Selenium-Cucumber-POM/src/test/resources/featurefiles/login.feature:16)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.MyRunner@7674f035]" started-at="2023-04-08T11:51:20 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-08T11:51:25 IST" duration-ms="5256" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with valid username and invalid pasword"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login feature"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.fail(Assert.java:115)
at stepdefinitions.LoginTest.user_should_get_a_proper_warning_message(LoginTest.java:59)
at ✽.user should get a proper warning message(file:///C:/OpenCart-Selenium-Cucumber-POM/src/test/resources/featurefiles/login.feature:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.MyRunner@7674f035]" started-at="2023-04-08T11:51:25 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-08T11:51:30 IST" duration-ms="5036" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with invalid username and invalid pasword"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login feature"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.fail(Assert.java:115)
at stepdefinitions.LoginTest.user_should_get_a_proper_warning_message(LoginTest.java:59)
at ✽.user should get a proper warning message(file:///C:/OpenCart-Selenium-Cucumber-POM/src/test/resources/featurefiles/login.feature:30)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.MyRunner@7674f035]" started-at="2023-04-08T11:51:30 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-08T11:51:35 IST" duration-ms="4837" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with no credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login feature"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.fail(Assert.java:115)
at stepdefinitions.LoginTest.user_should_get_a_proper_warning_message(LoginTest.java:59)
at ✽.user should get a proper warning message(file:///C:/OpenCart-Selenium-Cucumber-POM/src/test/resources/featurefiles/login.feature:37)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.MyRunner@7674f035]" started-at="2023-04-08T11:51:35 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-08T11:51:42 IST" duration-ms="6370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register account with unique email"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.MyRunner@7674f035]" started-at="2023-04-08T11:51:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-08T11:51:48 IST" duration-ms="6434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register account with duplicate email"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.MyRunner@7674f035]" started-at="2023-04-08T11:51:48 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-08T11:51:53 IST" duration-ms="4895" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register account with no details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.MyRunner@7674f035]" started-at="2023-04-08T11:51:53 IST" name="tearDownClass" finished-at="2023-04-08T11:51:57 IST" duration-ms="4010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.MyRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
